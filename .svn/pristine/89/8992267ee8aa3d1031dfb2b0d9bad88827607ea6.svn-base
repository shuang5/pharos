package org.renci.pharos.gui;



import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
class EdgeMenuFactory{
	public static EdgeMenu createEdgeMenu(TopologyGraph tg, Mode mode, State state){
		if (mode==Mode.PortMode){
			return new PortEdgeMenu(tg);
		}
		else if (mode==Mode.NodeMode && state==State.Provider){
			return new NodeEdgeMenu(tg);
		}
		else if (mode==Mode.NodeMode && state==State.Request){
			return new RequestNodeEdgeMenu(tg);
		}
		else return null;
	}
}

abstract public class EdgeMenu extends JPopupMenu{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	//private JPanel nodePanel;
	protected JMenuItem anItem;
	protected TopologyGraph topo;
	protected ActionListener menuListener;

	EdgeMenu(TopologyGraph tg){
		topo=tg;
	}

};

class PortEdgeMenu extends EdgeMenu{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private PortEdgePanel edgePanel;
	PortEdgeMenu(TopologyGraph tg){
		super(tg);
		edgePanel=new PortEdgePanel(tg);
		menuListener = new ActionListener() {	      
			public void actionPerformed(ActionEvent e) {
				if (e.getActionCommand()=="Edit"){
					edgePanel.setId(((PortLine)(topo.getSelectedItem())).getId());
					edgePanel.setLabel(((PortLine)(topo.getSelectedItem())).getLabel());
					edgePanel.setCapabilities(((PortLine)(topo.getSelectedItem())).getCapabilities());
					int result = JOptionPane.showConfirmDialog(null, edgePanel, 
		                    "Edge properties:", JOptionPane.OK_CANCEL_OPTION);
		            if (result == JOptionPane.OK_OPTION) {
		            	((PortLine)(topo.getSelectedItem())).setLabel(edgePanel.getLabel());
		            	((PortLine)(topo.getSelectedItem())).setId(edgePanel.getId());
		            	((PortLine)(topo.getSelectedItem())).setCapabilities(edgePanel.getCapabilities());
		            }
				}
				else if(e.getActionCommand()=="Delete"){
					topo.remove(topo.getSelectedItem());
					topo.repaint();
				}
				else if(e.getActionCommand()=="Make virtual"){
					((Line)topo.getSelectedItem()).makeVirtual();
					edgePanel.setVirtual();
				}
			}
		};
		anItem = new JMenuItem("Edit");
        add(anItem);
        anItem.addActionListener(menuListener);
        anItem = new JMenuItem("Delete");
        add(anItem);
        anItem.addActionListener(menuListener);
        anItem = new JMenuItem("Make virtual");
        add(anItem);
        anItem.addActionListener(menuListener);
	}
}
class NodeEdgeMenu extends EdgeMenu{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private NodeEdgePanel edgePanel;
	NodeEdgeMenu(TopologyGraph tg){
		super(tg);
		menuListener = new ActionListener() {	      
			public void actionPerformed(ActionEvent e) {
				if (e.getActionCommand()=="Edit"){
					edgePanel=new NodeEdgePanel(topo);
					int result = JOptionPane.showConfirmDialog(null, edgePanel, 
		                    "Edge properties:", JOptionPane.OK_CANCEL_OPTION);
		            if (result == JOptionPane.OK_OPTION) {
		            	((NodeLine)(topo.getSelectedItem())).setLinkType(edgePanel.getLinkType());
		            	((NodeLine)(topo.getSelectedItem())).setId(edgePanel.getId());
		            	edgePanel.setPorts();
		            }
				}
				else if(e.getActionCommand()=="Delete"){
					topo.remove(topo.getSelectedItem());
					topo.repaint();
				}
				else if(e.getActionCommand()=="Make virtual"){
					((Line)topo.getSelectedItem()).makeVirtual();
					edgePanel.setVirtual();
				}
			}
		};
		anItem = new JMenuItem("Edit");
        add(anItem);
        anItem.addActionListener(menuListener);
        anItem = new JMenuItem("Delete");
        add(anItem);
        anItem.addActionListener(menuListener);
        anItem = new JMenuItem("Make virtual");
        add(anItem);
        anItem.addActionListener(menuListener);
	}
}

class RequestNodeEdgeMenu extends EdgeMenu{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private RequestNodeEdgePanel edgePanel;
	RequestNodeEdgeMenu(TopologyGraph tg){
		super(tg);
		menuListener = new ActionListener() {	      
			public void actionPerformed(ActionEvent e) {
				if (e.getActionCommand()=="Edit"){
					edgePanel=new RequestNodeEdgePanel(topo);
					int result = JOptionPane.showConfirmDialog(null, edgePanel, 
		                    "Edge properties:", JOptionPane.OK_CANCEL_OPTION);
		            if (result == JOptionPane.OK_OPTION) {
		            	((RequestNodeLine)(topo.getSelectedItem())).setId(edgePanel.getId());
		            	((RequestNodeLine)(topo.getSelectedItem())).setRequest1(edgePanel.getRequest1());
		            	((RequestNodeLine)(topo.getSelectedItem())).setRequest2(edgePanel.getRequest2());
		            }
				}
				else if(e.getActionCommand()=="Delete"){
					topo.remove(topo.getSelectedItem());
					topo.repaint();
				}
			}
		};
		anItem = new JMenuItem("Edit");
        add(anItem);
        anItem.addActionListener(menuListener);
        anItem = new JMenuItem("Delete");
        add(anItem);
        anItem.addActionListener(menuListener);
	}
}