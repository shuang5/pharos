package org.renci.pharos.lp;

import java.util.ArrayList;

import org.renci.pharos.gui.DetailControl;

import net.sf.javailp.Result;

import com.tinkerpop.blueprints.Direction;
import com.tinkerpop.blueprints.Edge;
import com.tinkerpop.blueprints.Graph;
import com.tinkerpop.blueprints.Vertex;
import com.tinkerpop.blueprints.impls.tg.TinkerGraph;

public class OptimizationResult implements DetailControl {
	public String objective;
	public ArrayList<String> nzValues=new ArrayList<String>();
	public Result result;
	public Graph pg;
	public Graph rq;
	public OptimizationResult(){}
	public OptimizationResult(Graph p, Graph r){
		pg=p;
		rq=r;
	}
	public Graph toGraph1(){
		Graph g=new TinkerGraph();
		for(Edge re: rq.getEdges()){
			Vertex rv_in=re.getVertex(Direction.IN);
			Vertex pv_in=GraphHelper.getVertex(pg, rv_in.getProperty("ID"));
			Vertex vin=GraphHelper.copyVertexProperties(g, pv_in);
			Vertex rv_out=re.getVertex(Direction.OUT);
			Vertex pv_out=GraphHelper.getVertex(pg, rv_out.getProperty("ID"));
			Vertex vout=GraphHelper.copyVertexProperties(g, pv_out);
			
			Edge to=g.addEdge(null,vout,vin,re.getLabel());;
			to.setProperty("Virtual", "Yes");
			to.setProperty("ID",re.getProperty("ID"));
			to.setProperty("LinkType", "N/A");
		}
		return g;
	}
	public static Graph toGraph(Graph p,Graph r){
		return null;
	}
	@Override
	public Graph toGraph2() {
		// TODO Auto-generated method stub
		return null;
	}
	
}
