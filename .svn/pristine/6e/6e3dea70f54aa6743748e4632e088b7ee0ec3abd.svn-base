package org.renci.pharos.gui;



import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;

class NodeMenuFactory{
	public static NodeMenu createNodeMenu(TopologyGraph tg, Mode mode){
		if (mode==Mode.PortMode){
			return new PortNodeMenu(tg);
		}
		else if (mode==Mode.NodeMode){
			return new NodeNodeMenu(tg);
		}
		else return null;
	}
}

abstract public class NodeMenu extends JPopupMenu{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	protected TopologyGraph topo;
	protected JMenuItem anItem;
	protected ActionListener menuListener;

	NodeMenu(TopologyGraph tg){
		topo=tg;
		
	}

};

class PortNodeMenu extends NodeMenu{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private PortNodePanel nodePanel;
	PortNodeMenu(TopologyGraph tg){
		super(tg);
		nodePanel=new PortNodePanel(tg);
		menuListener = new ActionListener() {	      
			public void actionPerformed(ActionEvent e) {
				if (e.getActionCommand()=="Edit"){
					PortNode pn=(PortNode)topo.getSelectedItem();
					nodePanel.setDomain(pn.portproperties().getDomain());
					nodePanel.setId(pn.portproperties().getId());
					nodePanel.setDPID(pn.portproperties().getDPID());
					nodePanel.setPort(pn.portproperties().getPort());
					//nodePanel.setType(((Node)(topo.getSelectedItemShape())).getType());
					int result = JOptionPane.showConfirmDialog(null, nodePanel, 
		                    "Node properties:", JOptionPane.OK_CANCEL_OPTION);
		            if (result == JOptionPane.OK_OPTION) {
		            	
		            	pn.portproperties().setDomain(nodePanel.getDomain());
		            	pn.portproperties().setId(nodePanel.getId());
		            	pn.portproperties().setDPID(nodePanel.getDPID());
		            	//((Node)(topo.getSelectedItemShape())).setType(nodePanel.getType());
		            	pn.portproperties().setPort(Integer.parseInt(nodePanel.getPort()));
		            }
				}
				else if(e.getActionCommand()=="Delete"){
					topo.remove(topo.getSelectedItem());
					topo.repaint();
				}
			}
		};
		anItem = new JMenuItem("Edit");
        add(anItem);
        anItem.addActionListener(menuListener);
        anItem = new JMenuItem("Delete");
        add(anItem);
        anItem.addActionListener(menuListener);
	}
}
class NodeNodeMenu extends NodeMenu{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private NodeNodePanel nodePanel;
	NodeNodeMenu(TopologyGraph tg){
		super(tg);
		menuListener = new ActionListener() {	      
			public void actionPerformed(ActionEvent e) {
				if (e.getActionCommand()=="Edit"){
					nodePanel=new NodeNodePanel(topo);
					nodePanel.setDomain(((NodeNode)(topo.getSelectedItem())).getDomain());
					nodePanel.setId(((NodeNode)(topo.getSelectedItem())).getId());
					nodePanel.setDPID(((NodeNode)(topo.getSelectedItem())).getDPID());
					nodePanel.setLabelTranslation(((NodeNode)(topo.getSelectedItem())).isLabelTranslation());
					//nodePanel.setType(((Node)(topo.getSelectedItemShape())).getType());
				int result = JOptionPane.showConfirmDialog(null, nodePanel, 
		                    "Node properties:", JOptionPane.OK_CANCEL_OPTION);
		            if (result == JOptionPane.OK_OPTION) {
		            	((NodeNode)(topo.getSelectedItem())).setDomain(nodePanel.getDomain());
		            	((NodeNode)(topo.getSelectedItem())).setId(nodePanel.getId());
		            	((NodeNode)(topo.getSelectedItem())).setDPID(nodePanel.getDPID());
		            	((NodeNode)(topo.getSelectedItem())).setLabelTranslation((nodePanel.isLabelTranslation()));
		            	//((Node)(topo.getSelectedItemShape())).setType(nodePanel.getType());
		            }
				}
				else if(e.getActionCommand()=="Delete"){
					topo.remove(topo.getSelectedItem());
					topo.repaint();
				}
			}
		};
		anItem = new JMenuItem("Edit");
        add(anItem);
        anItem.addActionListener(menuListener);
        anItem = new JMenuItem("Delete");
        add(anItem);
        anItem.addActionListener(menuListener);
	}
}
