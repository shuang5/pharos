package org.renci.pharos.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JMenuItem;
import javax.swing.JOptionPane;

import com.google.common.base.Preconditions;

public class NodeNodeMenu extends NodeMenu{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private NodeNodePanel nodePanel;
	NodeNodeMenu(final TopologyGraph tg){
		super(tg);
		menuListener = new ActionListener() {	      
			public void actionPerformed(ActionEvent e) {
				if (e.getActionCommand()=="Edit"){
					nodePanel=new NodeNodePanel(topo);
					NodeNode n=Preconditions.checkNotNull((NodeNode)(topo.getSelectedItem()));
					nodePanel.setDomain(n.getDomain());
					nodePanel.setId(n.getId());
					nodePanel.setDPID(n.getDPID());
					nodePanel.setLabelTranslation(n.isLabelTranslation());
					//nodePanel.setType(((Node)(topo.getSelectedItemShape())).getType());
				int result = JOptionPane.showConfirmDialog(null, nodePanel, 
		                    "Node properties:", JOptionPane.OK_CANCEL_OPTION);
		            if (result == JOptionPane.OK_OPTION) {
		            	n.setDomain(nodePanel.getDomain());
		            	n.setId(nodePanel.getId());
		            	n.setDPID(nodePanel.getDPID());
		            	n.setLabelTranslation((nodePanel.isLabelTranslation()));
		            	if(n.configComplete())n.setColor(Drawings.nodeConfigedColor);
		            	else 
		            		n.setColor(Drawings.defaultNodeColor);
		            	tg.repaint();
		            }
				}
				else if(e.getActionCommand()=="Delete"){
					topo.remove(topo.getSelectedItem());
					topo.repaint();
				}
			}
		};
		anItem = new JMenuItem("Edit");
        add(anItem);
        anItem.addActionListener(menuListener);
        anItem = new JMenuItem("Delete");
        add(anItem);
        anItem.addActionListener(menuListener);
	}
}