package org.renci.pharos.lp;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;


import net.sf.javailp.*;
public class LpSolver {
	

	  public static void main(String[] args) throws FileNotFoundException, IOException {
		 /* 
	    try {
	      // Create a problem with 4 variables and 0 constraints
	      LpSolve solver = LpSolve.makeLp(0, 4);

	      // add constraints
	      solver.strAddConstraint("3 2 2 1", LpSolve.LE, 4);
	      solver.strAddConstraint("0 4 3 1", LpSolve.GE, 3);

	      // set objective function
	      solver.strSetObjFn("2 3 -2 3");

	      // solve the problem
	      solver.solve();

	      // print solution
	      System.out.println("Value of objective function: " + solver.getObjective());
	      double[] var = solver.getPtrVariables();
	      for (int i = 0; i < var.length; i++) {
	        System.out.println("Value of var[" + i + "] = " + var[i]);
	      }

	      // delete the problem and free memory
	      solver.deleteLp();
	    }
	    catch (LpSolveException e) {
	       e.printStackTrace();
	    }
	    */
		  SolverFactory factory = new SolverFactoryLpSolve(); // use lp_solve
		  factory.setParameter(Solver.VERBOSE, 0); 
		  factory.setParameter(Solver.TIMEOUT, 100); // set timeout to 100 seconds

		 
		  SSSDFlowProblem problem=new SSSDFlowProblem(new ILP (new LpProblem()), "A","F");
		  problem.addLabelConstraints();
		  problem.addCapacityConstraints();
		  problem.addRequestConstraints();
		  problem.addFlowConservationConstraints();
		  //objective
		  Linear linear = new Linear();
		  ArrayList<String> arr=problem.variables().getAllVariables();
		  for(String s: arr){
			  linear.add(1,s);
		  }
		  
		  problem.setObjective(linear, OBJ.MIN);
		  
		  Solver solver = factory.get(); // you should use this solver only once for one problem
		  Result result = problem.solve(solver);
		  if(result!=null){
			  for(String s:arr){
				  if(result.getPrimalValue(s).intValue()>0) 
					  System.out.println(s+"="+result.getPrimalValue(s));
			  }
			  System.out.println(result);
		  }
		  else System.out.println("no feasible soltuion found!");
	  }

}
